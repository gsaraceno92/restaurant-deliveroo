package deliveroo.it.restourantsprint.controllers;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.http.ResponseEntity;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonMappingException;

import org.springframework.web.bind.annotation.RestController;

import deliveroo.it.restourantsprint.repositories.FoodRepository;
import deliveroo.it.restourantsprint.models.Drink;
import deliveroo.it.restourantsprint.models.Food;
import deliveroo.it.restourantsprint.repositories.DrinkRepository;

@RestController
@RequestMapping(path = "/deliveroo") // This means URL's start with /demo (after Application path)
public class Menu {

    @Autowired // This means to get the bean called <resource>Repository
    // Which is auto-generated by Spring, we will use it to handle the data
    private FoodRepository foodRepository;
    private DrinkRepository drinkRepository;

    // @GetMapping("/menu")
    // public Iterable<Dish> getAll() {
    //     // This returns a JSON or XML with the users
    //     return menuRepository.findAll();
    // }

    @GetMapping("/food/{id}")
    Optional<Food> getFood(@PathVariable Integer id) {
        return foodRepository.findById(id);
    }
    @GetMapping("/drink/{id}")
    Optional<Drink> getDrink(@PathVariable Integer id) {
        return drinkRepository.findById(id);
    }

}